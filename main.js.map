{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Model/Post.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard-service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/form.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/post-detail/post-detail.component.css","webpack:///./src/app/post-detail/post-detail.component.html","webpack:///./src/app/post-detail/post-detail.component.ts","webpack:///./src/app/post/modal/dialog-content-example-dialog.html","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/profil/profil.component.css","webpack:///./src/app/profil/profil.component.html","webpack:///./src/app/profil/profil.component.ts","webpack:///./src/app/providers/post.service.ts","webpack:///./src/app/public/public.component.css","webpack:///./src/app/public/public.component.html","webpack:///./src/app/public/public.component.ts","webpack:///./src/app/role-guard.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Post{\r\n    public id: number;\r\n    public title: string;\r\n    public author: string;\r\n}","module.exports = \"\"","module.exports = \"<p>\\n  admin works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>Welcome to app!</h1>\\n<nav>\\n  <a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">login</a>\\n  <a routerLink=\\\"/profil\\\" routerLinkActive=\\\"active\\\">profil</a>\\n    <a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">admin</a>\\n    <a routerLink=\\\"/public\\\" routerLinkActive=\\\"active\\\">public</a>\\n    <a routerLink=\\\"/logout\\\" routerLinkActive=\\\"active\\\">logout</a>\\n    <a routerLink=\\\"/posts\\\" routerLinkActive=\\\"active\\\">blog</a>\\n</nav>\\n<hr>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ProfilComponent} from './profil/profil.component';\r\nimport {AuthService} from \"./auth.service\";\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {\r\n    MatButtonModule,\r\n    MatCheckboxModule, MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule\r\n} from '@angular/material';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\nimport {CanActivate} from '@angular/router';\r\nimport {AuthGuardService} from './auth-guard-service';\r\nimport {RoleGuardService,} from './role-guard.service';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {JwtHelperService, JwtModule, JwtModuleOptions} from \"@auth0/angular-jwt\";\r\nimport {PublicComponent} from './public/public.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\nimport {PostService} from \"./providers/post.service\";\r\nimport {PostComponent, DialogContentExampleDialog} from './post/post.component';\r\nimport { PostDetailComponent } from './post-detail/post-detail.component';\r\n\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'public', component: PublicComponent},\r\n    {path: 'logout', component: LogoutComponent},\r\n    {\r\n        path: 'posts',\r\n        component: PostComponent,\r\n        canActivate: [AuthGuardService]\r\n    },\r\n    {\r\n        path: 'profil',\r\n        component: ProfilComponent,\r\n        canActivate: [AuthGuardService]\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: '/', pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'admin',\r\n        component: AdminComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: {\r\n            /*expectedRole: 'admin',*/\r\n            expectedRoles: ['user', 'admin']\r\n        }\r\n    },\r\n    {path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\nexport function getAccessToken() {\r\n    console.log('localStorage.getItem(\\'token\\')', localStorage.getItem('token'));\r\n    return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        ProfilComponent,\r\n        PageNotFoundComponent,\r\n        AdminComponent,\r\n        PublicComponent,\r\n        LogoutComponent,\r\n        PostComponent,\r\n        DialogContentExampleDialog,\r\n        PostDetailComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule, MatButtonModule, MatCheckboxModule,\r\n        MatIconModule, MatFormFieldModule,\r\n        MatInputModule, MatCardModule,\r\n        ReactiveFormsModule,\r\n        CommonModule, MatDialogModule,\r\n        FormsModule,\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            {enableTracing: false} // <-- debugging purposes only\r\n        ),\r\n        JwtModule.forRoot({\r\n            config: {\r\n                tokenGetter: (getAccessToken),\r\n                whitelistedDomains: ['localhost:3000']\r\n            }\r\n        })\r\n    ],\r\n    entryComponents: [\r\n        DialogContentExampleDialog\r\n    ],\r\n    providers: [\r\n        AuthService,\r\n        AuthGuardService,\r\n        RoleGuardService,\r\n        JwtHelperService,\r\n        PostService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","// src/app/auth/auth-guard.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    constructor(public auth: AuthService, public router: Router) {}\n\n    canActivate(): boolean {\n        if (!this.auth.isAuthenticated()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {User} from \"./Model/User\";\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable, Subject} from \"rxjs/Rx\";\r\nimport {map} from \"rxjs-compat/operator/map\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Test } from './Model/Test';\r\n\r\nconst ENV = environment;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    private user : User;\r\n    private pathUser: string = `${ENV.host}/user`;\r\n\r\n    private pathTest: string = `${ENV.host}/test`;\r\n\r\n    test : Subject<Test> = new Subject<Test>();\r\n\r\n\r\n    constructor(private router: Router, private http: HttpClient, public jwtHelper: JwtHelperService) {\r\n    }\r\n\r\n    goodBy(){\r\n        this.test.next({name:'GoodBy My Friend'});\r\n    }\r\n\r\n    public getTest()  : Observable<Test>{\r\n        return this.http.get<Test>(this.pathTest, {observe: 'body'});\r\n    }\r\n    public updateTest(test:Test)  : Observable<Test>{\r\n        return this.http.post<Test>(this.pathTest,{test}, {observe: 'body'});\r\n    }\r\n\r\n    public getUser() {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        return this.user;\r\n    }\r\n\r\n    public setUser() {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        return this.user;\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('token');\r\n        let canAccess = !this.jwtHelper.isTokenExpired(token);\r\n        console.log('canAccess', canAccess);\r\n        return canAccess;\r\n\r\n    }\r\n\r\n    public loginUser(credentials)  : Observable<User>{\r\n        return this.http.get<User>(this.pathUser, {params: credentials, observe: 'body'});\r\n    }\r\n\r\n\r\n    public logoutUser() {\r\n        this.removeUserInLocalStorage();\r\n        this.router.navigate(['login']);\r\n    }\r\n\r\n    private removeUserInLocalStorage(){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    constructor(private formBuilder: FormBuilder) {\n    }\n\n    public createLoginUserFormBuilderValidator() {\n        return this.formBuilder.group({\n            email: ['', Validators.compose([\n                Validators.minLength(2),\n                Validators.maxLength(200),\n                Validators.required\n            ])],\n            password: ['', Validators.compose([\n                Validators.minLength(2),\n                Validators.maxLength(200),\n                Validators.required\n            ])]\n        });\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n    <mat-form-field>\\n        <input matInput value=\\\"ok@ok.fr\\\" placeholder=\\\"Enter your email\\\" formControlName=\\\"email\\\" required>\\n        <!--<mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>-->\\n    </mat-form-field>\\n    <br>\\n    <mat-form-field>\\n        <input formControlName=\\\"password\\\" matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    </mat-form-field>\\n    <div class=\\\"button-row\\\">\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Connexion</button>\\n    </div>\\n\\n</form>\\n\"","import {Component, OnInit, Input} from '@angular/core';\r\nimport {FormGroup, FormControl} from \"@angular/forms\";\r\nimport {FormService} from \"../form.service\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {User} from \"../Model/User\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    hide = true;\r\n\r\n    user : User;\r\n\r\n    public loginForm: FormGroup;\r\n\r\n    \r\n    constructor(private router:Router, public formBuilderProvider: FormService, private authService : AuthService) {\r\n        this.loginForm = this.formBuilderProvider.createLoginUserFormBuilderValidator();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Send login request to API Rest\r\n     */\r\n    public login(){\r\n\r\n        this.authService.loginUser(this.loginForm.value)\r\n            .subscribe((user) => {\r\n                if(user && user.token){\r\n                    localStorage.setItem('token', JSON.stringify(user.token));\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    this.router.navigate(['profil']);\r\n                }\r\n            });\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth.service\";\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n      this.auth.logoutUser();\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<span>Mon post est : </span>\\r\\n<div *ngIf=\\\"post\\\">\\r\\n\\r\\n  <h2>{{post.author | uppercase}} Details</h2>\\r\\n  <div><span>id: </span>{{post.id}}</div>\\r\\n  <div>\\r\\n    <label>name:\\r\\n      <input [(ngModel)]=\\\"post.title\\\" placeholder=\\\"title\\\"/>\\r\\n    </label>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"lol\\\">\\r\\n    Envoyé depuis un #lol\\r\\n  {{lol}}\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Post } from '../Model/Post';\r\n\r\n\r\n@Component({\r\n  selector: 'app-post-detail',\r\n  templateUrl: './post-detail.component.html',\r\n  styleUrls: ['./post-detail.component.css']\r\n})\r\nexport class PostDetailComponent implements OnInit {\r\n\r\n\r\n  @Input() post : Post;\r\n  @Input() lol : string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Hi {{data.name}}</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>What's your favorite animal?</p>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"data.animal\\\">\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>\\r\\n</div>\"","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.selected {\\r\\n    background-color: rgb(11, 116, 161) !important;\\r\\n    color: white;\\r\\n  }\"","module.exports = \"<p>\\r\\n    post works!\\r\\n\\r\\n    <mat-card *ngFor=\\\"let post of posts\\\" class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n            <mat-card-title>{{post.title}}</mat-card-title>\\r\\n            <mat-card-subtitle>id : {{post.id}}</mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n        <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\r\\n        <mat-card-content>\\r\\n        <p>\\r\\n            The author is {{post.author}}\\r\\n        </p>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-button>LIKE</button>\\r\\n            <button [class.selected]=\\\"post === selectedPost\\\" (click)=\\\"onSelect(post)\\\" mat-button>SEE</button>\\r\\n        </mat-card-actions>\\r\\n\\r\\n        <app-post-detail [post]=\\\"selectedPost\\\"></app-post-detail>\\r\\n        <app-post-detail [post]=\\\"post\\\"></app-post-detail>\\r\\n\\r\\n    </mat-card>\\r\\n\\r\\n    <input #lol type=\\\"text\\\"/>\\r\\n    <button (click)=\\\"getlol(lol.value)\\\">generate lol</button>\\r\\n    <span *ngIf=\\\"lol2\\\">{{lol2}}</span>\\r\\n    <app-post-detail [lol]=\\\"lol.value\\\"></app-post-detail>\\r\\n</p>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {PostService} from \"../providers/post.service\";\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\nimport {Post} from \"../Model/Post\";\r\n\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\nexport interface DialogData {\r\n    animal: string;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-content-example-dialog',\r\n    templateUrl: './modal/dialog-content-example-dialog.html',\r\n})\r\nexport class DialogContentExampleDialog {\r\n\r\n    constructor(public dialogRef: MatDialogRef<PostComponent>,\r\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'app-post',\r\n    templateUrl: './post.component.html',\r\n    styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n    public posts : Post[] = [];\r\n    public comments : Comment[] = [];\r\n    animal: string;\r\n    name: string;\r\n    selectedPost : Post;\r\n\r\n    lol2 : string;\r\n\r\n    constructor(private postService: PostService, public dialog: MatDialog) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        /*\r\n        this.postService.getPosts().pipe(\r\n            map((posts: Post[]) => posts.filter(post => post.id == 1))\r\n        ).subscribe((posts) => {\r\n            this.posts = posts;//.filter(post=> post.id ==1);\r\n            console.log(this.posts);\r\n        },err => {\r\n            console.error('Oops:', err.message);\r\n            this.openDialog();\r\n        },\r\n        () => {\r\n            console.log(`We're done here!`);\r\n        });\r\n*/\r\n\r\n        this.postService.getPostAndComment().pipe(\r\n            //map(([posts, comments]) => posts.filter(post => post.id == 1, ))\r\n        ).subscribe(([posts, comments]) => {\r\n                this.posts = posts.filter(post=> post.id ==1);\r\n                this.comments = comments.filter(comment=> comment.postId == 1);\r\n                console.log('post', this.posts);\r\n                console.log('comments',this.comments);\r\n        },err => {\r\n            console.error('Oops:', err.message);\r\n            this.openDialog();\r\n        },\r\n        () => {\r\n            console.log(`We're done here!`);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getlol(val){\r\n        console.log(val);\r\n        this.lol2 = val;\r\n    }\r\n\r\n    onSelect(post: Post): void {\r\n        this.selectedPost = post;\r\n      }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(DialogContentExampleDialog, {\r\n            width: '250px',\r\n            data: {name: this.name, animal: this.animal}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<div>\\n  <ul>\\n      <li *ngIf=\\\"user.token\\\">{{user.token}}</li>\\n      <li *ngIf=\\\"user.username\\\">{{user.username}}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {User} from \"../Model/User\";\nimport {Observable} from \"rxjs/index\";\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit {\n\n    public user : User;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n      this.user = this.authService.getUser();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Post } from \"../Model/Post\";\nimport { Observable } from \"rxjs/Rx\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/internal/operators\";\nimport { forkJoin } from 'rxjs';\n\n\nconst ENV = environment;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PostService {\n\n    private pathPosts: string = `${ENV.host}/posts`;\n    private pathComments: string = `${ENV.host}/comments`;\n\n    constructor(private http: HttpClient, ) {\n    }\n\n    public getPostAndComment(): Observable<any> {\n        return forkJoin(this.getPosts(), this.getComents());\n    }\n\n    private getPosts(): Observable<Post[]> {\n        return this.http.get<Post[]>(this.pathPosts, { observe: \"body\" }).pipe(\n            catchError((err: HttpErrorResponse) => {\n                console.log('errrr', err);\n                throw err;\n            })\n        );\n    }\n\n\n    private getComents(): Observable<Comment[]> {\n        return this.http.get<Comment[]>(this.pathComments, { observe: \"body\" }).pipe(\n            catchError((err: HttpErrorResponse) => {\n                console.log('errrr', err);\n                throw err;\n            })\n        );\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\r\\n    public works!\\r\\n  <span *ngIf=\\\"test\\\">\\r\\n    {{test.name}}\\r\\n  </span>\\r\\n\\r\\n  <button (click)=\\\"goodBy()\\\">Say good by</button>\\r\\n\\r\\n\\r\\n</p>\\r\\n\\r\\n<div>\\r\\n  <label>name:\\r\\n    <input  [(ngModel)]=\\\"test.name\\\" placeholder=\\\"test\\\"/>\\r\\n  </label>\\r\\n  <button (click)=\\\"updateTest(test)\\\">Modifier good by</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Test } from '../Model/Test';\r\n\r\n@Component({\r\n  selector: 'app-public',\r\n  templateUrl: './public.component.html',\r\n  styleUrls: ['./public.component.css']\r\n})\r\nexport class PublicComponent implements OnInit {\r\n\r\n  test : Test = {name : \"Helloooo\"};\r\n\r\n  constructor(private authService : AuthService) { \r\n    this.authService.test.subscribe((data)=>{\r\n      this.test = {name: data.name};\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getTest().subscribe((data)=>{\r\n      this.test = {name: data.name};\r\n    })\r\n  }\r\n\r\n  goodBy(){\r\n      this.authService.goodBy();\r\n  }\r\n\r\n  updateTest(newValTest : Test){\r\n      this.authService.updateTest(newValTest).subscribe(res=>{\r\n        console.log('res',res);\r\n      });\r\n  }\r\n\r\n}\r\n","// src/app/auth/role-guard.service.ts\n\nimport { Injectable } from '@angular/core';\nimport {\n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot\n} from '@angular/router';\nimport { AuthService } from './auth.service';\nimport decode from 'jwt-decode';\n\n@Injectable()\nexport class RoleGuardService implements CanActivate {\n\n    constructor(public auth: AuthService, public router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        try {\n            // this will be passed from the route config\n            // on the data property\n            const expectedRole = route.data.expectedRole;\n\n            const token = localStorage.getItem('token');\n\n            // decode the token to get its payload\n            const tokenPayload = decode(token);\n\n            if (!this.auth.isAuthenticated() ||tokenPayload.role !== expectedRole) {\n                this.router.navigate(['login']);\n                return false;\n            }\n            return true;\n        } catch(error) {\n            return false;\n        }\n\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    host : 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}